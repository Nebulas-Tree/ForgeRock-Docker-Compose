### Instructions ###
# 1. (If required) Reset AM and DS
# 2. Run `docker-compose up --build`

### Useful Linux commands ###
# Get main IP address: ip route get $(ip route show 0.0.0.0/0 | grep -oP 'via \K\S+') | grep -oP 'src \K\S+'
# Reset AM and DS: sudo rm -rf volumes/am/.openamcfg volumes/am/am volumes/cfg* volumes/cts*
# Bootstrap AM using Amster: docker exec am.example.com ./bootstrap.sh Strn9Psswrd cfg.example.com
# Running interactive Amster: docker exec -it am.example.com ./amster

### Default Directory DNs ###
# Also see `configurator_summary_details.png`
# config settings
# cfg.example.com 636
# ou=am-config,dc=example,dc=com
# uid=am-config,ou=admins,ou=am-config,dc=example,dc=com
# identities settings
# cfg.example.com 636
# ou=identities,dc=example,dc=com
# uid=am-identity-bind-account,ou=admins,ou=identities,dc=example,dc=com
# cts settings
# cts.example.com:636
# ou=tokens,dc=example,dc=com
# uid=openam_cts,ou=admins,ou=famrecords,ou=openam-session,ou=tokens,dc=example,dc=com

version: "3.7"
services:
  cts.example.com:
    container_name: "cts.example.com"
    hostname: cts.example.com
    build:
      context: buildfiles/ds
    image: ds:1.0
    ports:
      - "14444:4444"
      - "1389:389"
      - "1636:636"
      - "1080:80"
      - "1443:443"
    volumes:
      - ./volumes/cts/.opendj/:/root/.opendj/
    networks:
      app_net:
        ipv4_address: 172.16.0.11
    env_file:
      - .env
    environment:
      - TYPE=directory-cts
      - HOST=cts.example.com
      - DS_ROOT_PASS=Strn9Psswrd
      - DS_MONITOR_PASS=Strn9Psswrd
      - DS_CTS_PASS=Strn9Psswrd

  cts2.example.com:
    container_name: "cts2.example.com"
    hostname: cts2.example.com
    build:
      context: buildfiles/ds
    image: ds:1.0
    ports:
      - "24444:4444"
      - "2389:389"
      - "2636:636"
      - "2080:80"
      - "2443:443"
    volumes:
      - ./volumes/cts2/.opendj/:/root/.opendj/
    networks:
      app_net:
        ipv4_address: 172.16.0.12
    env_file:
      - .env
    environment:
      - TYPE=directory-replication-cts
      - HOST=cts2.example.com
      - DS_ROOT_PASS=Strn9Psswrd
      - DS_MONITOR_PASS=Strn9Psswrd
      - DS_CTS_PASS=Strn9Psswrd
      - MASTER_HOST=cts.example.com
      - MASTER_ROOT_PASS=Strn9Psswrd
      - SLAVE_HOST=cts2.example.com

  cfg.example.com:
    container_name: "cfg.example.com"
    hostname: cfg.example.com
    build:
      context: buildfiles/ds
    image: ds:1.0
    ports:
      - "34444:4444"
      - "3389:389"
      - "3636:636"
      - "3080:80"
      - "3443:443"
    volumes:
      - ./volumes/cfg/.opendj/:/root/.opendj/
    networks:
      app_net:
        ipv4_address: 172.16.0.13
    env_file:
      - .env
    environment:
      - TYPE=directory-cfg-user
      - HOST=cfg.example.com
      - DS_ROOT_PASS=Strn9Psswrd
      - DS_MONITOR_PASS=Strn9Psswrd
      - DS_CONFIG_PASS=Strn9Psswrd
      - DS_IDS_PASS=Strn9Psswrd

  cfg2.example.com:
    container_name: "cfg2.example.com"
    hostname: cfg2.example.com
    build:
      context: buildfiles/ds
    image: ds:1.0
    ports:
      - "44444:4444"
      - "4389:389"
      - "4636:636"
      - "4080:80"
      - "4443:443"
    volumes:
      - ./volumes/cfg2/.opendj/:/root/.opendj/
    networks:
      app_net:
        ipv4_address: 172.16.0.14
    env_file:
      - .env
    environment:
      - TYPE=directory-replication-cfg-user
      - HOST=cfg2.example.com
      - DS_ROOT_PASS=Strn9Psswrd
      - DS_MONITOR_PASS=Strn9Psswrd
      - DS_CONFIG_PASS=Strn9Psswrd
      - DS_IDS_PASS=Strn9Psswrd
      - MASTER_HOST=cfg.example.com
      - MASTER_ROOT_PASS=Strn9Psswrd
      - SLAVE_HOST=cfg2.example.com

  am.example.com:
    container_name: "am.example.com"
    hostname: am.example.com
    build:
      context: buildfiles/am
    image: am-base:1.0
    ports:
      - "8080:8080"
    volumes:
      - ./volumes/am/am:/root/am
      - ./volumes/am/.openamcfg:/root/.openamcfg
      - ./volumes/am/treenodes:/tmp/treenodes
    networks:
      app_net:
        ipv4_address: 172.16.0.21
    env_file:
      - .env
    environment:
      - DIRECTORIES=cfg.example.com:636 cts.example.com:636 cfg2.example.com:636 cts2.example.com:636
    extra_hosts:
      - subscribers.example.com:172.16.0.21

#  am2.example.com:
#    container_name: "am2.example.com"
#    hostname: am2.example.com
#    build:
#      context: buildfiles/am
#    image: am-base:1.0
#    ports:
#      - "8180:8080"
#    volumes:
#      - ./volumes/am2/am:/root/am
#      - ./volumes/am2/.openamcfg:/root/.openamcfg
#      - ./volumes/am2/treenodes:/tmp/treenodes
#    networks:
#      app_net:
#        ipv4_address: 172.16.0.22
#    env_file:
#      - .env
#    environment:
#      - DIRECTORIES=cfg.example.com:636 cts.example.com:636 # cfg2.example.com:636 cts2.example.com:636
#    extra_hosts:
#      - subscribers.example.com:172.16.0.22

  fec.example.com:
    container_name: "fec.example.com"
    hostname: fec.example.com
    build:
      context: buildfiles/httpd
    image: httpd-webagent:1.0
    ports:
      - "80:80"
    volumes:
      - ./volumes/app/htdocs:/usr/local/apache2/htdocs
    networks:
      app_net:
        ipv4_address: 172.16.0.31
    extra_hosts:
      - subscribers.example.com:172.16.0.21

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "172.16.0.0/24"
